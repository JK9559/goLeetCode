https://blog.csdn.net/joeyon1985/article/details/43230251

首先 在前端上需要进行限流：
1. 回答问题 验证码等
2. 通过redis的漏斗限流算法(知识点)限流
3. 通过nginx可以对同一ip的请求进行限流

应用层面
1. 分布式缓存(注意redis的知识点)，将热点数据存在缓存里，只对缓存进行操作，定时将结果写回数据库
优点是 快 可以减轻数据库压力
缺点是 过于依赖缓存，如果redis服务器停止服务 可能会出现数据丢失(解决办法：可以加快对redis的快照持久化或者针对某个数据进行日志文件的IO写入)

2. 对业务做降级，对于一些暂时无关的功能点，做一些禁止调用的处理

3. 业务中尽量减少对数据库的直接调用，比如一些修改不敏感信息的操作，可以将请求通过队列进行限流。(这里会问对队列的理解)