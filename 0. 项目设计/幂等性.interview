问题解决：

幂等性：一个请求，不管重复来多少次，结果是不会改变的。

每个消息都会有唯一的消息 id。
1）、先查再保存
每次保存数据的时候，都先查一下，如果数据存在了那么就不保存。这个情况是并发不高的情况。

2）、业务表添加约束条件
如果你的数据库将来都不会分库分表，那么可以在业务表字段加上唯一约束条件（UNIQUE），这样相同的数据就不会保存为多份。

3）、添加消息表
再数据库里面，添加一张消息消费记录表，表字段加上唯一约束条件（UNIQUE），消费完之后就往表里插入一条数据。因为加了唯一约束条件，第二次保存的时候，MySQL 就会报错，就插入不进去；通过数据库可以限制重复消费。

4）、使用 Redis
如果你的系统是分布式的，又做了分库分表，那么可以使用 Redis 来做记录，把消息 id 存在 Redis 里，下次再有重复消息 id 在消费的时候，如果发现 Redis 里面有了就不能进行消费。

5）、高并发下
如果你的系统并发很高，那么可以使用 Redis 或者 zookeeper 的分布式对消息 id 加锁，然后使用上面的几个方法进行幂等性控制。
