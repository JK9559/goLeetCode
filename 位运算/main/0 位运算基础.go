package main

import "fmt"

func main() {
	a := 37
	fmt.Printf("%08b\n", a)
	fmt.Printf("%08b\n", a^0)
	fmt.Printf("%08b\n", a^(^0))
	fmt.Printf("%08b\n", ^a)
	// 11011010 --> 00100101 --> 00100110 --> -0100110
	// 利用 x ^ x = 0 的特点，可以将三个数中重复的两个数去除，只留下另一个数。
	// 利用 x & 0s = 0 和 x & 1s = x 的特点，可以实现掩码操作.
	// 利用 x | 0s = x 和 x | 1s = 1s 的特点，可以实现设值操作。

	// n&(n-1) 去除 n 的位级表示中最低的那一位。
	// 例如对于二进制表示 10110100，减去 1 得到 10110011，这两个数相与得到 10110000。
	// n&(-n) 得到 n 的位级表示中最低的那一位。
	// -n 得到 n 的反码加 1，对于二进制表示 10110100，-n 得到 01001100，相与得到 00000100。
	// n-n&(~n+1) 去除 n 的位级表示中最高的那一位。

}
